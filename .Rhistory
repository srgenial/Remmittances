#Library setup
libs <- c("WDI", "forecast", "ggplot2", "portes", "tseries", "vars", "FactoMineR")
class(libs)
length(libs)
for (i in libs) {
if(!is.element(i,.packages(all.available = TRUE))) {
install.packages(i,repos="https://cran.revolutionanalytics.com/")
}
library(i,character.only = TRUE)
}
# path
path <-"C:/Users/srgen/OneDrive/Documentos/Applied Economics/Econometrics/Econometrics II class/Corona EcoII-2/Homework/Paper equipo/"
# some functions
source(paste(path, "functions.r", sep = ""))
#import DataFrame
PCDM<-WDI(indicator = c('GFDD.DI.12'), country=c('MX'), start=1961, end=2016)
DCFS<-WDI(indicator = c("FS.AST.DOMS.GD.ZS"), country=c('MX'), start=1961, end=2016)
DCPS<-WDI(indicator = c("FS.AST.PRVT.GD.ZS"), country=c('MX'), start=1961, end=2016)
M2<-WDI(indicator = c("FM.LBL.BMNY.GD.ZS"), country=c('MX'), start=1961, end=2016)
GDPMX<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('MX'), start=1961, end=2016)
GDPUS<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('US'), start=1961, end=2016)
GCF<-WDI(indicator = c("NE.GDI.TOTL.ZS"), country=c('MX'), start=1961, end=2016)
#reArrange
names(PCDM)<-c("code", "C","PCDM","yr")
PCDM<-PCDM[order(PCDM$yr),]
names(DCFS)<-c("code", "C","DCFS","yr")
DCFS<-DCFS[order(DCFS$yr),]
names(DCPS)<-c("code", "C","DCPS","yr")
DCPS<-DCPS[order(DCPS$yr),]
names(M2)<-c("code", "C","M2","yr")
M2<-M2[order(M2$yr),]
names(GDPMX)<-c("code", "C","GDPMX","yr")
GDPMX<-GDPMX[order(GDPMX$yr),]
names(GDPUS)<-c("code", "C","GDPUS","yr")
GDPUS<-GDPUS[order(GDPUS$yr),]
names(GCF)<-c("code", "C","GCF","yr")
GCF<-GCF[order(GCF$yr),]
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts),start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
ts.plot(scale((ts)),col=c(1,2,5,4,3,6,7), lwd=c(1,1,1,1,1,1,4))
#legend("top", colnames(ts), col = c(1:7), lty = 1)
adf_mat <- matrix(0, ncol(ts), 2)
rownames(adf_mat) <- colnames(ts)
colnames(adf_mat) <- c("levels", "fd")
for(i in 1 : ncol(ts)){
adf_mat[i,"levels"] <- adf(ts[,i], "none")$p.value
adf_mat[i,"fd"] <- adf(diff(ts[,i]), "none")$p.value
}
adf_mat
tsf<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS,M2$M2)
tsf<-ts(scale(tsf),start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot((tsf),  col=c(1,2,3,4), lwd=c(2,2,2,2))
legend("top", colnames(tsf), col = c(1:6), lty = 1)
adf_matf <- matrix(0, ncol(tsf), 2)
rownames(adf_matf) <- colnames(tsf)
colnames(adf_matf) <- c("levels", "fd")
for(i in 1 : ncol(tsf)){
adf_matf[i,"levels"] <- adf(tsf[,i], "none")$p.value
adf_matf[i,"fd"] <- adf(diff(tsf[,i]), "none")$p.value
}
adf_matf
pc1<-PCA(tsf, scale.unit=FALSE, ncp=4, graph = FALSE)
head(pc1$eig)
head(pc1$var$contrib)
findex<-(tsf[,1] * (pc1$var$contrib[1,1]/100)) + (tsf[,2]*(pc1$var$contrib[2,1]/100)) +(tsf[,3]*(pc1$var$contrib[3,1]/100))+(tsf[,4]*(pc1$var$contrib[4,1]/100))
head(findex)
ts.plot(findex, col=2, lwd=3)
f<-cbind(GDPMX$GDPMX, findex, GDPUS$GDPUS)
f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot(scale(f), col=c(1,2,3,4), lwd=c(2,2,2,5))
legend("top", colnames(tsf), col = c(1:4), lty = 1)
head(f)
#f<-cbind(GDPMX$GDPMX, findex,GDPUS$GDPUS)
#f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
#ts.plot(scale(f), col=c(1,2,3), lwd=c(2,2,2))
adf_matm <- matrix(0, ncol(f), 2)
rownames(adf_matm) <- colnames(f)
colnames(adf_matm) <- c("levels", "fd")
for(i in 1 : ncol(f)){
adf_matm[i,"levels"] <- adf(f[,i], "none")$p.value
adf_matm[i,"fd"] <- adf(diff(f[,i]), "none")$p.value
}
adf_matm
p <- VARselect(f,lag.max=12, type = "const")$selection["HQ(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
summary(varf)
roots(varf)
head(f)
regref<-lm(f[,"GDPMX$GDPMX"]~f[,"findex"]+f[,"GDPUS$GDPUS"])
summary(regref)
ts.plot(regref$residuals)
head(f)
regref<-lm(f[,"GDPMX$GDPMX"]~f[,"findex"]+f[,"GDPUS$GDPUS"])
summary(regref)
ts.plot(regref$residuals)
adf(resid(regref))
arch.test(varf)
normality.test(varf)
serial.test(varf)
normality.test(varf)
arch.test(varf)
serial.test(varf)
causalidad <- matrix(, ncol(varf),1)
causalidad <- matrix(, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causality(varf,cause=c("findex", "GDPUS"))
causality(varf,cause=c("findex", "GDPUS"))
causality(varf,cause=c("findex", "GDPUS"))
causality(varf,cause=c("findex", "GDPUS$GDPUS"))
head(f)
head(varf)
causality(varf,cause=c("findex", "GDPUS.GDPUS"))
#causalidad <- matrix(0, ncol(f),1)
#rownames(causalidad) <-colnames(f)
#for (i in 1 : ncol(f)) {
# causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
#}
#causalidad
causality(varf,cause=c("findex", "GDPUS.GDPUS"))
#causalidad <- matrix(0, ncol(f),1)
#rownames(causalidad) <-colnames(f)
#for (i in 1 : ncol(f)) {
# causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
#}
#causalidad
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
head(f)
tsf<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS,M2$M2)
tsf<-ts(scale(tsf),names=c(PCDM, DCFS, DCPS, M2),start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
tsf<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS,M2$M2)
tsf<-ts(scale(tsf),names=c(yr,PCDM, DCFS, DCPS, M2),start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
tsf<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS,M2$M2)
tsf<-ts(scale(tsf),names=c("PCDM", "DCFS", "DCPS", "M2"),start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot((tsf),  col=c(1,2,3,4), lwd=c(2,2,2,2))
legend("top", colnames(tsf), col = c(1:6), lty = 1)
adf_matf <- matrix(0, ncol(tsf), 2)
rownames(adf_matf) <- colnames(tsf)
colnames(adf_matf) <- c("levels", "fd")
for(i in 1 : ncol(tsf)){
adf_matf[i,"levels"] <- adf(tsf[,i], "none")$p.value
adf_matf[i,"fd"] <- adf(diff(tsf[,i]), "none")$p.value
}
adf_matf
pc1<-PCA(tsf, scale.unit=FALSE, ncp=4, graph = FALSE)
head(pc1$eig)
head(pc1$var$contrib)
findex<-(tsf[,1] * (pc1$var$contrib[1,1]/100)) + (tsf[,2]*(pc1$var$contrib[2,1]/100)) +(tsf[,3]*(pc1$var$contrib[3,1]/100))+(tsf[,4]*(pc1$var$contrib[4,1]/100))
head(findex)
ts.plot(findex, col=2, lwd=3)
f<-cbind(GDPMX$GDPMX, findex, GDPUS$GDPUS)
f<-ts(f,names=c("GDPMX", "findex", "GDPUS")start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
f<-cbind(GDPMX$GDPMX, findex, GDPUS$GDPUS)
f<-ts(f,names=c("GDPMX", "findex", "GDPUS"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot(scale(f), col=c(1,2,3,4), lwd=c(2,2,2,5))
legend("top", colnames(tsf), col = c(1:4), lty = 1)
head(f)
#f<-cbind(GDPMX$GDPMX, findex,GDPUS$GDPUS)
#f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
#ts.plot(scale(f), col=c(1,2,3), lwd=c(2,2,2))
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts),start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
ts.plot(scale((ts)),col=c(1,2,5,4,3,6,7), lwd=c(1,1,1,1,1,1,4))
#legend("top", colnames(ts), col = c(1:7), lty = 1)
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts),name=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GDPUS", "GCF",start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
ts.plot(scale((ts)),col=c(1,2,5,4,3,6,7), lwd=c(1,1,1,1,1,1,4))
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts),name=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GDPUS", "GCF", start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1))
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts),name=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GDPUS", "GCF", start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1))
head(tsf)
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts), name=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GDPUS", "GCF", start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1))
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts), names=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GDPUS", "GCF", start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1))
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts), names=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GDPUS", "GCF"), start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1))
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
ts<-ts((ts), names=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GDPUS", "GCF"), start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
head(ts)
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
head(ts)
ts<-ts((ts), names=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GCF"), start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
ts.plot(scale((ts)),col=c(1,2,5,4,3,6,7), lwd=c(1,1,1,1,1,1,4))
#legend("top", colnames(ts), col = c(1:7), lty = 1)
ts<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
head(ts)
ts<-ts((ts), names=c("PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GCF"), start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
ts.plot(scale((ts)),col=c(1,2,5,4,3,6,7), lwd=c(1,1,1,1,1,1,4))
legend("top", colnames(ts), col = c(1:7), lty = 1)
f<-cbind(GDPMX$GDPMX, findex, GDPUS$GDPUS)
f<-ts(f, names=c("GDPMX", "findex", "GDPUS"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot(scale(f), col=c(1,2,3,4), lwd=c(2,2,2,5))
legend("top", colnames(tsf), col = c(1:4), lty = 1)
head(f)
#f<-cbind(GDPMX$GDPMX, findex,GDPUS$GDPUS)
#f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
#ts.plot(scale(f), col=c(1,2,3), lwd=c(2,2,2))
head(f)
f<-cbind(GDPMX$GDPMX, findex, GDPUS$GDPUS)
head(f)
f<-ts(f, names=c("GDPMX", "findex", "GDPUS"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot(scale(f), col=c(1,2,3,4), lwd=c(2,2,2,5))
legend("top", colnames(f), col = c(1:4), lty = 1)
head(f)
#f<-cbind(GDPMX$GDPMX, findex,GDPUS$GDPUS)
#f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
#ts.plot(scale(f), col=c(1,2,3), lwd=c(2,2,2))
adf_matm <- matrix(0, ncol(f), 2)
rownames(adf_matm) <- colnames(f)
colnames(adf_matm) <- c("levels", "fd")
for(i in 1 : ncol(f)){
adf_matm[i,"levels"] <- adf(f[,i], "none")$p.value
adf_matm[i,"fd"] <- adf(diff(f[,i]), "none")$p.value
}
adf_matm
p <- VARselect(f,lag.max=12, type = "const")$selection["HQ(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
summary(varf)
roots(varf)
head(varf)
regref<-lm(f[,"GDPMX$GDPMX"]~f[,"findex"]+f[,"GDPUS$GDPUS"])
head(varf)
regref<-lm(f[,"GDPMX$GDPMX"]~f[,"findex"]+f[,"GDPUS$GDPUS"])
regref<-lm(f[,"GDPMX"]~f[,"findex"]+f[,"GDPUS"])
summary(regref)
ts.plot(regref$residuals)
adf(resid(regref))
causality(varf,cause=c("findex", "GDPUS"))
head(f)
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad
#causality(varf,cause=c("findex", "GDPUS"))
causalidad <- matrix(0, ncol(f),1)
rownames(causalidad) <-colnames(f)
for (i in 1 : ncol(f)) {
causalidad[i,] <-causality(varf, cause =colnames(f)[i])$Granger$p.value
}
causalidad
#PLOT de respuesta impulso
opp <- par(mfrow = c(2, 2))
for(i in 1 : 6){
plot(varf(vec, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
#PLOT de respuesta impulso
opp <- par(mfrow = c(2, 2))
for(i in 1 : 6){
plot(irf(vec, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
#PLOT de respuesta impulso
opp <- par(mfrow = c(2, 2))
for(i in 1 : 6){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
#PLOT de respuesta impulso
opp <- par(mfrow = c(1, 1))
for(i in 1 : 6){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
#PLOT de respuesta impulso
opp <- par(mfrow = c(1, 1))
for(i in 1 : 6){
plot(irf(varf, impulse = colnames(f)[i], response = "GDPMX"),
main = colnames(f)[i])
}
#PLOT de respuesta impulso
opp <- par(mfrow = c(1, 1))
for(i in 1 : 6){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
#PLOT de respuesta impulso
opp <- par(mfrow = c(1, 1))
for(i in 1 : 2){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
par(opp)
#PLOT de respuesta impulso
opp <- par(mfrow = c(2, 1))
for(i in 1 : 2){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
par(opp)
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,2))
for(i in 1 : 2){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
par(opp)
#PLOT de respuesta impulso
opp <- par(mfrow = c(2,2))
for(i in 1 : 2){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
par(opp)
#PLOT de respuesta impulso
opp <- par(mfrow = c(4,2))
for(i in 1 : 2){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
par(opp)
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,4))
for(i in 1 : 2){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
par(opp)
#PLOT de respuesta impulso
opp <- par(mfrow = c(1,1))
for(i in 1 : 2){
plot(irf(varf, impulse = colnames(f)[i+1], response = "GDPMX"),
main = colnames(f)[i+1])
}
par(opp)
johaf <- ca.jo(f, ecdet = "const", K = p)
summary(johaf)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = p)
summary(johaf)
johaf <- ca.jo(f, type="eigen", ecdet = "none", K = p)
summary(johaf)
johaf <- ca.jo(f, type="eigen", ecdet = "constant", K = p)
johaf <- ca.jo(f, type="eigen", ecdet = "const", K = p)
summary(johaf)
vecf<-cajorls(johaf, r=0)
vecf<-cajorls(johaf, r=1)
summary(vecf$rlm)
WDIsearch('*LIQUID*')
#Library setup
libs <- c("WDI", "forecast", "ggplot2", "portes", "tseries", "vars", "FactoMineR")
class(libs)
length(libs)
for (i in libs) {
if(!is.element(i,.packages(all.available = TRUE))) {
install.packages(i,repos="https://cran.revolutionanalytics.com/")
}
library(i,character.only = TRUE)
}
WDIsearch('*LIQUID*')
liq1<-WDI(indicator = c("FS.LBL.QLIQ.GD.ZS"), country=c('MX'), start=1961, end=2016)
liq2<-WDI(indicator = c("FS.LBL.LIQU.GDP.ZS"), country=c('MX'), start=1961, end=2016)
liq3<-WDI(indicator = c("FS.LBL.LIQU.GD.ZS"), country=c('MX'), start=1961, end=2016)
ts.plot(cbind(liq1, liq2, liq3))
liq1<-WDI(indicator = c("FS.LBL.QLIQ.GD.ZS"), country=c('MX'), start=2000, end=2016)
liq2<-WDI(indicator = c("FS.LBL.LIQU.GDP.ZS"), country=c('MX'), start=2000, end=2016)
liq3<-WDI(indicator = c("FS.LBL.LIQU.GD.ZS"), country=c('MX'), start=2000, end=2016)
liq1<-WDI(indicator = c("FS.LBL.LIQU.GD.ZS"), country=c('MX'), start=2000, end=2016)
liq1<-WDI(indicator = c("GFDD.DI.05"), country=c('MX'), start=2000, end=2016)
head(liq1)
liq1<-WDI(indicator = c("GFDD.DI.05"), country=c('MX'), start=1961, end=2016)
bottom(liq1)
foot(liq1)
end(liq1)
names(liq1)<-c("code", "C","liq1","yr")
liq1<-liq1[order(liq1$yr),]
WDIsearch('*LIQUID*')
end(liq1)
head(liq1)
#clean
rm(list = ls())
sessionInfo()
# Set the working directory
setwd("C:/Users/srgen/OneDrive/Documentos/Applied Economics/Econometrics/Econometrics II class/Corona EcoII-2/Homework/Paper equipo")
getwd()
#Library setup
libs <- c("WDI", "forecast", "ggplot2", "portes", "tseries", "vars", "FactoMineR")
class(libs)
length(libs)
for (i in libs) {
if(!is.element(i,.packages(all.available = TRUE))) {
install.packages(i,repos="https://cran.revolutionanalytics.com/")
}
library(i,character.only = TRUE)
}
# path
path <-"C:/Users/srgen/OneDrive/Documentos/Applied Economics/Econometrics/Econometrics II class/Corona EcoII-2/Homework/Paper equipo/"
# some functions
source(paste(path, "functions.r", sep = ""))
#import DataFrame
LLG<-WDI(indicator = c("GFDD.DI.05"), country=c('MX'), start=1961, end=2016)
PCDM<-WDI(indicator = c('GFDD.DI.12'), country=c('MX'), start=1961, end=2016)
DCFS<-WDI(indicator = c("FS.AST.DOMS.GD.ZS"), country=c('MX'), start=1961, end=2016)
DCPS<-WDI(indicator = c("FS.AST.PRVT.GD.ZS"), country=c('MX'), start=1961, end=2016)
M2<-WDI(indicator = c("FM.LBL.BMNY.GD.ZS"), country=c('MX'), start=1961, end=2016)
GDPMX<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('MX'), start=1961, end=2016)
GDPUS<-WDI(indicator = c("NY.GDP.PCAP.KD"), country=c('US'), start=1961, end=2016)
GCF<-WDI(indicator = c("NE.GDI.TOTL.ZS"), country=c('MX'), start=1961, end=2016)
#reArrange
names(LLG)<-c("code", "C","LLG","yr")
LLG<-LLG[order(LLG$yr),]
names(PCDM)<-c("code", "C","PCDM","yr")
PCDM<-PCDM[order(PCDM$yr),]
names(DCFS)<-c("code", "C","DCFS","yr")
DCFS<-DCFS[order(DCFS$yr),]
names(DCPS)<-c("code", "C","DCPS","yr")
DCPS<-DCPS[order(DCPS$yr),]
names(M2)<-c("code", "C","M2","yr")
M2<-M2[order(M2$yr),]
names(GDPMX)<-c("code", "C","GDPMX","yr")
GDPMX<-GDPMX[order(GDPMX$yr),]
names(GDPUS)<-c("code", "C","GDPUS","yr")
GDPUS<-GDPUS[order(GDPUS$yr),]
names(GCF)<-c("code", "C","GCF","yr")
GCF<-GCF[order(GCF$yr),]
ts<-cbind(LLG$LLG, PCDM$PCDM, DCFS$DCFS, DCPS$DCPS, M2$M2, GDPMX$GDPMX, GDPUS$GDPUS, GCF$GCF)
head(ts)
ts<-ts((ts), names=c("LLG","PCDM", "DCFS", "DCPS","M2", "GDPMX", "GDPUS", "GCF"), start= min(GDPMX$yr), end=max(GDPMX$yr), frequency=1)
ts.plot(scale((ts)),col=c(1,2,3,4,5,6,7,8), lwd=c(4,1,1,1,1,1,1,4))
legend("top", colnames(ts), col = c(1:7), lty = 1)
adf_mat <- matrix(0, ncol(ts), 2)
rownames(adf_mat) <- colnames(ts)
colnames(adf_mat) <- c("levels", "fd")
for(i in 1 : ncol(ts)){
adf_mat[i,"levels"] <- adf(ts[,i], "none")$p.value
adf_mat[i,"fd"] <- adf(diff(ts[,i]), "none")$p.value
}
adf_mat
tsf<-cbind(PCDM$PCDM, DCFS$DCFS, DCPS$DCPS,M2$M2)
tsf<-ts(scale(tsf),names=c("LLG","PCDM", "DCFS", "DCPS", "M2"),start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
tsf<-cbind(LLG$LLG, PCDM$PCDM, DCFS$DCFS, DCPS$DCPS,M2$M2)
tsf<-ts(scale(tsf),names=c("LLG","PCDM", "DCFS", "DCPS", "M2"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
head(tsf)
ts.plot((tsf),  col=c(5,1,2,3,4), lwd=c(5,2,2,2))
legend("top", colnames(tsf), col = c(1:5), lty = 1)
tsf<-cbind(LLG$LLG, PCDM$PCDM, DCFS$DCFS, DCPS$DCPS,M2$M2)
tsf<-ts(scale(tsf),names=c("LLG","PCDM", "DCFS", "DCPS", "M2"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
head(tsf)
ts.plot((tsf),  col=c(1,2,3,4,5), lwd=c(5,2,2,2,5))
legend("top", colnames(tsf), col = c(1:5), lty = 1)
tsf<-cbind(LLG$LLG, PCDM$PCDM, DCFS$DCFS, DCPS$DCPS)
tsf<-ts(scale(tsf),names=c("LLG","PCDM", "DCFS", "DCPS"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
head(tsf)
ts.plot((tsf),  col=c(1,2,3,4), lwd=c(5,2,2,2))
legend("top", colnames(tsf), col = c(1:4), lty = 1)
adf_matf <- matrix(0, ncol(tsf), 2)
rownames(adf_matf) <- colnames(tsf)
colnames(adf_matf) <- c("levels", "fd")
for(i in 1 : ncol(tsf)){
adf_matf[i,"levels"] <- adf(tsf[,i], "none")$p.value
adf_matf[i,"fd"] <- adf(diff(tsf[,i]), "none")$p.value
}
adf_matf
pc1<-PCA(tsf, scale.unit=FALSE, ncp=4, graph = FALSE)
head(pc1$eig)
head(pc1$var$contrib)
findex<-(tsf[,1] * (pc1$var$contrib[1,1]/100)) + (tsf[,2]*(pc1$var$contrib[2,1]/100)) +(tsf[,3]*(pc1$var$contrib[3,1]/100))+(tsf[,4]*(pc1$var$contrib[4,1]/100))
head(findex)
ts.plot(findex, col=2, lwd=3)
f<-cbind(GDPMX$GDPMX, findex, GDPUS$GDPUS)
head(f)
f<-ts(f, names=c("GDPMX", "findex", "GDPUS"), start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
ts.plot(scale(f), col=c(1,2,3,4), lwd=c(2,2,2,5))
legend("top", colnames(f), col = c(1:4), lty = 1)
head(f)
#f<-cbind(GDPMX$GDPMX, findex,GDPUS$GDPUS)
#f<-ts(f,start= min(PCDM$yr), end=max(PCDM$yr), frequency=1)
#ts.plot(scale(f), col=c(1,2,3), lwd=c(2,2,2))
adf_matm <- matrix(0, ncol(f), 2)
rownames(adf_matm) <- colnames(f)
colnames(adf_matm) <- c("levels", "fd")
for(i in 1 : ncol(f)){
adf_matm[i,"levels"] <- adf(f[,i], "none")$p.value
adf_matm[i,"fd"] <- adf(diff(f[,i]), "none")$p.value
}
adf_matm
p <- VARselect(f,lag.max=12, type = "const")$selection["HQ(n)"]
p
# estimamos el VAR
varf <- VAR(f, p = p, type = "const")
summary(varf)
roots(varf)
head(ts)
cor(ts)
